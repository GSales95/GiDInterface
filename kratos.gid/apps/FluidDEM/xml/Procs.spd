<?xml version="1.0" encoding="utf-8"?>
<container n="procs" pn="procs" includeContainer="No">
	
	<proc n='GetMeshingDomains' args='args'>
      <![CDATA[
	  return [PfemFluid::xml::ProcGetMeshingDomains $domNode $args]
     ]]>
    </proc>
	<proc n='GetContactDomains' args='args'>
      <![CDATA[
	  return [PfemFluid::xml::ProcGetContactDomains $domNode $args]
        
     ]]>
    </proc>
    <proc n='CheckNodalConditionStateSolid' args='args'>
	  <![CDATA[
	  return [PfemFluid::xml::ProcCheckNodalConditionStateSolid $domNode $args]
	  
	  ]]>
	</proc>
	 <proc n='ElementOutputState' args='args'>
	  <![CDATA[
	  # Overwritten the base function due to Parts splitted
		set resp [ ::PfemFluid::xml::::CheckElementOutputState $domNode]
		if {$resp} {return "normal"} else {return "hidden"}
	  ]]>
	</proc>
	<proc n='GetElementsDict' args='args'>
	  <![CDATA[
	  return [PfemFluid::xml::ProcGetElementsDict $domNode $args]
	  ]]>
	</proc>
	<proc n='GetElementsValues' args='args'>
	  <![CDATA[
	  return [PfemFluid::xml::ProcGetElementsValues $domNode $args]
	  ]]>
	</proc>
	<proc n='SolutionTypeState' args='args'>
	  <![CDATA[
	  return [PfemFluid::xml::ProcSolutionTypeState $domNode $args]
	  ]]>
	</proc>
	<proc n='GetBodyTypeValues' args='args'>
	  <![CDATA[
	  return [PfemFluid::xml::ProcGetBodyTypeValues $domNode $args]
	  ]]>
	</proc>
	<proc n='GetSolutionStrategiesPFEM' args='args'>
	  <![CDATA[
	  return [PfemFluid::xml::ProcGetSolutionStrategiesPFEM $domNode $args]
	  ]]>
	</proc>
	<proc n='GetPartUN' args='args'>
		<![CDATA[
		return [PfemFluid::xml::ProcGetPartUN $domNode $args]
		]]>
	</proc>
	<proc n='PartsOverWhat' args='args'>
		<![CDATA[
		return [PfemFluid::xml::ProcPartsOverWhat $domNode $args]
		]]>
	</proc>
	<proc n='ActiveIfAnyPartState' args='args'>
		<![CDATA[
		return [PfemFluid::xml::ProcActiveIfAnyPartState $domNode $args]
		]]>
	</proc>
	<proc n='GetBodiesValues' args='args'>
		<![CDATA[
		return [PfemFluid::xml::ProcGetBodiesValues $domNode $args]
		]]>
	</proc>
	<proc n='GetRigidBodiesValues' args='args'>
		<![CDATA[
		return [PfemFluid::xml::ProcGetRigidBodiesValues $domNode $args]
		]]>
	</proc>
	<proc n='CheckNodalConditionStatePFEM' args='args'>
		<![CDATA[
		return [PfemFluid::xml::ProcCheckNodalConditionStatePFEM $domNode $args]
		]]>
	</proc>

	  	<proc n='Fixity' args='args'>
	  <![CDATA[
		return "normal"
	  ]]>
	</proc>
		<proc n='MaxGroups' args='args'>
	  <![CDATA[
		set childs [$domNode getElementsByTagName group]
		if {[llength $childs] > 1} {
			foreach group [lrange $childs 1 end] {$group delete}
			gid_groups_conds::actualize_conditions_window
			error "You can only set one part"
		}
	  ]]>
	</proc>
	<proc n='CheckIdOnMyParent' args='args'>
	  <![CDATA[
		set r "hidden"
		set parent [$domNode parent]
		set wantedname [lindex $args 0]
		set wantedvalue [lindex $args 1]
		#W "wantedname $wantedname wantedvalue $wantedvalue"
		foreach v [$parent getElementsByTagName value] {
			if {[$v @n] eq $wantedname} {
				if {[$v @v] eq $wantedvalue} {
					set r "normal"
					break
				} else {
					set r "hidden"
				}
			}
		}
		return $r
	  ]]>
	</proc>

</container>