<?xml version="1.0" encoding="utf-8"?>
<container n="ModelInfo" pn="Model information" icon="information16" help="Model information" state="normal" open_window="0">
    <value n="TypeofProblem" pn="Type of Problem" un="DamTypeofProblem" v="Mechanical" values="Mechanical,Thermo-Mechanical,UP_Mechanical,Acoustic" help="Type of problem" actualize_tree="1"/>
    
    <value n="SolStratCombo" pn="Solution strategy" un="DamSolStrat" v="" values="" dict="[GetSolutionStrategies]" actualize_tree="1" state="normal"/>
    <value n="MechanicalScheme" pn="Scheme" v=""    un="DamScheme" values="" dict="[GetSchemes Mechanical]" actualize_tree="1"/>
    <container n="MechanicalProblem" pn="Mechanical Problem" un="DamMechanicalData" state="[checkStateByUniqueName DamTypeofProblem Mechanical]" actualize_tree="1" open_window="0">
        
        <value n="SolutionType" pn="Solution type" v="Quasi-Static" values="Quasi-Static,Dynamic" help="Solution type" actualize_tree="1"/>
        <value n="AnalysisType" pn="Analysis type" v="Linear" values="Linear,Non-Linear" help="Analysis type" />
        <value n="SolStratCombo" pn="Solution strategy" v="" values="" dict="[GetSolutionStrategies]" actualize_tree="1" state="normal"/>
        <value n="MechanicalScheme" pn="Scheme" v="" values="" dict="[GetSchemes Mechanic]" actualize_tree="1"/>
         <container n="StratParams" pn="Strategy parameters" icon="groupsTreeNew.gif"  state="normal" open_window="0">
            <dynamicnode command="spdAux::injectSolStratParams" args=""/>
            <dynamicnode command="spdAux::injectSolvers" args=""/>
        </container>
        
    </container>
    
    <container n="ThermoMechanicalProblem" pn="Thermo-Mechanical Problem"  un="DamThermo-MechanicalData" state="[checkStateByUniqueName DamTypeofProblem Thermo-Mechanical]"  actualize_tree="1" open_window="0">
            
            <container n="MechanicalPartProblem" pn="Mechanical Problem"  state="normal" actualize_tree="1" open_window="0">
                <value n="SolutionType" pn="Solution type" un="DamSoluType" v="Quasi-Static" values="Quasi-Static,Dynamic" help="Solution type" state="readonly" actualize_tree="1"/>
                <value n="AnalysisType" pn="Analysis type" un="DamAnalysisType" v="Linear" values="Linear,Non-Linear" state="readonly" help="Analysis type" />
                <container n="StratParams" pn="Strategy parameters" un="DamStratParams" icon="groupsTreeNew.gif"  state="normal" open_window="0">
                    <dynamicnode command="spdAux::injectSolStratParams" args=""/>
                    <dynamicnode command="spdAux::injectSolvers" args=""/>
                </container>
            </container>
            
            <container n="ThermalProblem" pn="Thermal Problem"  state="normal" actualize_tree="1" open_window="0">
                <value n="SolStratCombo" pn="Solution strategy" un="DamSolStratTherm" v="" values="" dict="[GetSolutionStrategies Thermal]" actualize_tree="1" state="disabled"/>
                <value n="ThermalScheme" pn="Scheme" un="DamMechanicalSchemeTherm" v=""  values="" dict="[GetSchemes Thermal]" actualize_tree="1"/>
                <value n="ReferenceTemperature" pn="Reference Temeperature" un="DamReferenceTemperature" type="double" v="10.0" actualize_tree="1"/>
            </container>
            
    </container> 

    <container n="UP_MechanicalProblem" pn="UP Mechanical Problem" un="DamUP_MechanicalData" state="[checkStateByUniqueName DamTypeofProblem UP_Mechanical]" actualize_tree="1" open_window="0">
        
        <value n="SolutionType" pn="Solution type" un="DamSoluType" v="Dynamic" actualize_tree="1"/>
        <value n="AnalysisType" pn="Analysis type" un="DamAnalysisType" v="Linear" values="Linear,Non-Linear" help="Analysis type" state="readonly" />
        <container n="StratParams" pn="Strategy parameters" un="DamStratParams" icon="groupsTreeNew.gif"  state="normal" open_window="0">
            <dynamicnode command="spdAux::injectSolStratParams" args=""/>
            <dynamicnode command="spdAux::injectSolvers" args=""/>
        </container>
        
    </container>


    <container n="AcousticProblem" pn="Acoustic Problem" state="[checkStateByUniqueName DamTypeofProblem Acoustic]"  actualize_tree="1" open_window="0">
         <container n="StratParams" pn="Strategy parameters" un="DamStratParams" icon="groupsTreeNew.gif"  state="normal" open_window="0">
            <dynamicnode command="spdAux::injectSolStratParams" args=""/>
            <dynamicnode command="spdAux::injectSolvers" args=""/>
        </container>

    </container> 


</container>  
